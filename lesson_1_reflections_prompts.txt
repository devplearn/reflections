How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	It narrowed down the list of differences between the file and listed some with line 
	numbers. But for some difference it didn't but still promplted the text that was 
	different. It was a bit difficult to find it.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	It would save lot of time and effort and concentrate more on programming rather than keep track of what changed

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

	cons:- might forget to commit
	pros:- better control on on logical commits 

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

	because files/functionality are dependent on each other 

How can you use the commands git log and git diff to view the history of files?

	git log gives the history of changes along with commit ids along with the comments
	and dates when the change was done.
	once you have these commit ids you can use these ids 
	(just the first 5 characters of commit id will work too) to compare the changes 
	(additions in green , deletions in red) along with the line number

How might using version control make you more confident to make changes that
could break something?

	it's so easy to revert back to an earlier version test the code and 
	move forward to latest version with few simple steps.
	this is definitely useful and feel more confident

Now that you have your workspace set up, what do you want to try using Git for?

    	I'll start with a simple file/project and get comfortable with it by playing around with it and then maybe move onto a bigger project
